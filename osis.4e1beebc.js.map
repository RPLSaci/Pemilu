{"mappings":"AAAA,sBAAsB;AACtB;AAEA,eAAe;IACX,IAAI,UAAU;IACd,qCAAqC;IACrC,MAAM,OAAO,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC;IAC7C,QAAQ,GAAG,CAAC;IAEZ,iCAAiC;IACjC,IAAI,CAAC,QAAQ,CAAC,aAAa,OAAO,CAAC,gBAAgB;QAC/C,MAAM;QACN,SAAS,QAAQ,CAAC,IAAI,GAAG;QACzB,QAAQ,qDAAqD;IACjE;IAEA,IAAI;QACA,uDAAuD;QACvD,MAAM,WAAW,MAAM,MAAM,UAAQ,mBAAmB;YACpD,QAAQ;YACR,SAAS;gBACL,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;gBAAE,UAAU,KAAK,QAAQ;gBAAE,UAAU,KAAK,QAAQ;YAAC;QAC5E;QAEA,IAAI,CAAC,SAAS,EAAE,EACZ,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,CAAC,CAAC;QAG5D,MAAM,SAAS,MAAM,SAAS,IAAI;QAElC,IAAI,OAAO,KAAK,EAAE;YACd,6BAA6B;YAC7B,QAAQ,KAAK,CAAC,kBAAkB,OAAO,KAAK;YAC5C,MAAM;QACV,OACI,8CAA8C;QAC9C,SAAS,aAAa,CAAC,QAAQ,WAAW,GAAG,OAAO,IAAI,CAAC,QAAQ;IAEzE,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,sCAAsC;QACpD,MAAM;IACV;AACJ;AAEA,4CAA4C;AAC5C,MAAM;AACN,eAAe,MAAM,CAAC;IAClB,IAAG,MAAM,GAAG;IACZ,uCAAuC;IACvC,MAAM,mBAAmB,SAAS,aAAa,CAAC;IAEhD,IAAI,CAAC,kBAAkB;QACnB,MAAM;QACN,QAAQ,sEAAsE;IAClF;IAEA,MAAM,gBAAgB,iBAAiB,KAAK;IAC5C,MAAM,CAAC,uBAAuB,EAAE,cAAc,CAAC;IAE/C,IAAI;QACA,IAAI,UAAU,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC;QAE9C,IAAG,CAAC,SAAS;YACT,MAAM;YACN,SAAS,QAAQ,CAAC,IAAI,GAAG;QAC7B;QAEA,aAAa,OAAO,CAAC,WAAU,KAAK,SAAS,CAAC;YAAC,OAAM,QAAQ,GAAG;YAAC,QAAO;QAAa;QAErF,iCAAiC;QACjC,0GAA0G;QAC1G,sBAAsB;QACtB,iBAAiB;QACjB,8CAA8C;QAC9C,SAAS;QACT,2GAA2G;QAC3G,MAAM;QAEN,sBAAsB;QACtB,iEAAiE;QACjE,IAAI;QAEJ,wCAAwC;QAExC,sBAAsB;QAClB,kDAAkD;QAClD,6CAA6C;QACjD,WAAW;QACP,oEAAoE;QACpE,yCAAyC;QACzC,SAAS,QAAQ,CAAC,IAAI,GAAG,kBAAkB,mCAAmC;IAClF,IAAI;IACR,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,kCAAkC;QAChD,MAAM;IACV;AACJ","sources":["src/assets/js/osis.js"],"sourcesContent":["// Inisialisasi fungsi\ninit();\n\nasync function init() {\n    let BASEAPI = \"https://8080-rplsaci-pemiluapi-jfvwph8s12t.ws-us116.gitpod.io\"\n    // Ambil data login dari localStorage\n    const data = JSON.parse(localStorage.getItem(\"loginObject\"));\n    console.log(data);\n\n    // Cek apakah data login tersedia\n    if (!data || !localStorage.getItem(\"loginObject\")) {\n        alert(\"NO USERDATA, REDIRECTING TO LOGIN\");\n        document.location.href = \"./index.html\";\n        return; // Hentikan eksekusi lebih lanjut jika data tidak ada\n    }\n\n    try {\n        // Lakukan permintaan POST untuk memverifikasi pengguna\n        const response = await fetch(BASEAPI+\"/api/user/login\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ username: data.username, password: data.password }),\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const result = await response.json();\n\n        if (result.error) {\n            // Tangani kesalahan jika ada\n            console.error(\"Login failed: \", result.error);\n            alert(\"Login failed. Please try again.\");\n        } else {\n            // Tampilkan nama pengguna jika login berhasil\n            document.querySelector(\"#usn\").textContent = result.user.username;\n        }\n    } catch (error) {\n        console.error(\"An error occurred while logging in\", error);\n        alert(\"An error occurred while logging in. Please try again.\");\n    }\n}\n\n// Fungsi untuk menangani pemilihan kandidat\nkirim(0)\nasync function kirim(i) {\n    if(i !== 1) return\n    // Cek apakah ada kandidat yang dipilih\n    const selectedKandidat = document.querySelector(\"input[name='osis']:checked\");\n    \n    if (!selectedKandidat) {\n        alert(\"Pilihlah 1 kandidat\");\n        return; // Hentikan eksekusi lebih lanjut jika tidak ada kandidat yang dipilih\n    }\n\n    const kandidatValue = selectedKandidat.value;\n    alert(`Kandidat yang dipilih: ${kandidatValue}`);\n\n    try {\n        let pilihan = JSON.parse(localStorage.getItem(\"Pilihan\"))\n\n        if(!pilihan) {\n            alert(\"Kamu harus pilih MPK Dahulu\")\n            document.location.href = \"./mpk.html\"\n        }\n\n        localStorage.setItem(\"Pilihan\",JSON.stringify({\"MPK\":pilihan.MPK,\"OSIS\":kandidatValue}))\n\n        // Kirim data pemilihan ke server\n        // const response = await fetch(\"https://redesigned-lamp-wx969x4q6g6f599x-8080.app.github.dev/api/vote\", {\n        //     method: \"POST\",\n        //     headers: {\n        //         \"Content-Type\": \"application/json\",\n        //     },\n        //     body: JSON.stringify({ username: data.username, password: data.password, kandidat: kandidatValue }),\n        // });\n\n        // if (!response.ok) {\n        //     throw new Error(`HTTP error! status: ${response.status}`);\n        // }\n\n        // const result = await response.json();\n\n        // if (result.error) {\n            // console.error(\"Voting failed: \", result.error);\n            // alert(\"Voting failed. Please try again.\");\n        // } else {\n            // Tindakan setelah pemilihan berhasil, misalnya mengalihkan halaman\n            // alert(\"Vote submitted successfully!\");\n            document.location.href = \"./success.html\"; // Ganti dengan halaman yang sesuai\n        // }\n    } catch (error) {\n        console.error(\"An error occurred while voting\", error);\n        alert(\"An error occurred while voting. Please try again.\");\n    }\n}\n"],"names":[],"version":3,"file":"osis.4e1beebc.js.map"}